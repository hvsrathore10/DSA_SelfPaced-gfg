//Description : Given two strings s1 and s2 check weather s2 is generated by rotating s1.
#include<iostream>
#include<string>
using namespace std;
// Naive Approach :- Time complexity :O(nÂ²)
bool rotation(string &s1,string &s2){
    if(s1.length()!=s2.length()) 
        return false;

    int n = s1.length();
    for(int i=0;i<n;i++){
        if(s1 == s2)
            return true;

        char temp = s1[n-1];
        int j = n-1;
        while(j!=0){
            s1[j] = s1[j-1];
            j--;
        }
        // str1.replace(position,length,str2);  
        s1[0] = temp;
    }
    return false;
}
// Efficient Approach:- Time complexity :O(n)
bool isRotated(string &s1,string &s2){
    if(s1.length()!=s2.length()) 
        return false;
    
    return ((s1+s1).find(s2)!=string::npos);
}
int main(){
    string s1 = "ababcd";
    string s2 = "abcdab";
    cout<<(rotation(s1,s2)? "True" : "False")<<endl;
    cout<<(isRotated(s1,s2)? "True" : "False")<<endl;
    return 0;
}